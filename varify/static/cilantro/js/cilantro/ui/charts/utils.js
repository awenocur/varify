define(["underscore","highcharts"],function(t,e){var n,i,r,s,o;return i=function(t){var n;return n=e.getOptions().colors,n[t%n.length]},n=/\d{4}-\d{2]-\d{2]/,s=function(t){var e,n,i;return i=parseInt(t.substr(0,4)),n=parseInt(t.substr(5,2))-1,e=parseInt(t.substr(8,2)),Date.UTC(i,n,e)},o=function(t,n,r){var o,a,l,u,c,h,p,d,f,g,v,m,y,_,w,b,x,C,k,$,E,S,P,O,N,T,A,j,I,D,q,V,R,M,L,W,F,z;if(n.length>2)throw new Error("3-dimensional charts are not supported.                Specify which field the series applies to.");if(!n)throw new Error("The field instances must be supplied");for(S=[],I=[],E=n[0],j=n[1],P=E.get("name"),$=E.get("enumerable")||"boolean"===E.get("simple_type"),O="date"===E.get("simple_type")?"datetime":"linear",j?(D=j.get("name"),A=j.get("enumerable")||"boolean"===j.get("simple_type"),q="date"===j.get("simple_type")?"datetime":"linear"):(D="Frequency",A=!1,q="linear"),$&&A?(a="scatter",S.push(" "),I.push(" ")):a=!j||$||A?A?"scatter":"datetime"===O||"datetime"===q?"line":"column":"scatter",w={},l=t.clustered,F=t.data,h=R=0,L=F.length;L>R;h=++R)y=F[h],C=null!=r?y.values.slice(r,r+1)[0]:"",(_=w[C])?(_.data.push(y),_.stats.min=Math.min(_.stats.min,y.count),_.stats.max=Math.max(_.stats.max,y.count),_.stats.sum+=y.count):(_=w[C]={name:C,stats:{min:y.count,max:y.count,sum:y.count}},_.data=$&&A?[{x:0,y:0,radius:0,sentinel:!0},y]:[y]),k=y.values[0],null===k&&(k="(no data)"),$?(-1===(p=S.indexOf(k.toString()))&&(p=S.push(k.toString())-1),k=p):"datetime"===O&&(k=s(k)),j?(T=y.values[1],null===T&&(T="(no data)"),A?(-1===(p=I.indexOf(T.toString()))&&(p=I.push(T.toString())-1),T=p):"datetime"===q&&(T=s(T))):T=y.count,y.x=k,y.y=T;b=[],$&&A&&(N=S.push(" ")-1,V=I.push(" ")-1),x=0;for(f in w){if(_=w[f],$&&A&&(_.data.push({x:0,y:V,radius:0,sentinel:!0}),_.data.push({x:N,y:V,radius:0,sentinel:!0}),_.data.push({x:N,y:V,radius:0,sentinel:!0})),b.push(_),o=_.stats.avg=_.stats.sum/parseFloat(_.data.length,10),d=_.stats.max,"scatter"===a)for(z=_.data,M=0,W=z.length;W>M;M++)m=z[M],m.sentinel||(g=Math.min(Math.max(parseInt(5*(parseFloat(m.count,10)/o))/10,.05),1),u=e.Color(i(x)).setOpacity(g),m.marker={fillColor:u.get()},$&&(m.marker.radius=7));x++}return c="scatter"===a&&$?b[1]?function(){return"<h5>"+this.series.name+"</h5><br /><b>"+P+":</b> "+this.series.xAxis.categories[this.point.x]+"<br /><b>"+D+":</b> "+this.series.yAxis.categories[this.point.y]}:function(){return"<b>"+P+":</b> "+this.series.xAxis.categories[this.point.x]+"<br /><b>"+D+":</b> "+this.series.yAxis.categories[this.point.y]}:"column"===a&&$?b[1]?function(){return"<h5>"+this.series.name+"</h5><br /><b>"+P+":</b> "+this.series.xAxis.categories[this.point.x]+"<br /><b>"+D+":</b> "+e.numberFormat(parseFloat(this.y))}:function(){return"<b>"+P+":</b> "+this.series.xAxis.categories[this.point.x]+"<br /><b>"+D+":</b> "+e.numberFormat(parseFloat(this.y))}:b[1]?function(){return"<h5>"+this.series.name+"</h5><br /><b>"+P+":</b> "+e.numberFormat(parseFloat(this.x))+"<br /><b>"+D+":</b> "+e.numberFormat(parseFloat(this.y))}:function(){return"<b>"+P+":</b> "+e.numberFormat(parseFloat(this.x))+"<br /><b>"+D+":</b> "+e.numberFormat(parseFloat(this.y))},v={clustered:l,chart:{type:a},title:{text:j?""+P+" vs. "+D:""+P+" "+D},series:b,xAxis:{title:{text:P},type:O},yAxis:{title:{text:D},type:q},tooltip:{formatter:c}},S.length&&(v.xAxis.categories=S),I.length&&(v.yAxis.categories=I),b[1]||(v.legend={enabled:!1}),"scatter"===a&&(v.yAxis.gridLineWidth=0,$||(v.chart.zoomType="xy")),v},r=function(e){var n,i,r,s,o;for(r=[],s=0,o=e.length;o>s;s++)n=e[s],i=t.clone(n),i.x=n.values[0],i.y=null!=n.values[1]?n.values[1]:n.count,r.push(i);return{data:t.sortBy(r,"x")}},{processResponse:o,getSeries:r}});
//@ sourceMappingURL=utils.js.map