var __hasProp={}.hasOwnProperty,__extends=function(t,e){function n(){this.constructor=t}for(var i in e)__hasProp.call(e,i)&&(t[i]=e[i]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t};define(["underscore","marionette","../core","../base","../concept"],function(t,e,n,i,o){var r,s;return r=function(t){function e(){return s=e.__super__.constructor.apply(this,arguments)}return __extends(e,t),e.prototype.className="query-workflow",e.prototype.template="workflows/query",e.prototype.regions={workspace:".concept-workspace-region"},e.prototype.initialize=function(){if(this.data={},!(this.data.context=this.options.context))throw new Error("context model required");if(!(this.data.concepts=this.options.concepts))throw new Error("concept collection required");return this.on("router:load",function(){return n.panels.concept.openPanel(),n.panels.context.openPanel()}),this.on("router:unload",function(){return n.panels.concept.closePanel()})},e.prototype.onRender=function(){return this.workspace.show(new o.ConceptWorkspace({context:this.data.context,concepts:this.data.concepts}))},e}(e.Layout),{QueryWorkflow:r}});
//@ sourceMappingURL=query.js.map