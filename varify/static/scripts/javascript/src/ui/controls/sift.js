// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['underscore', 'cilantro'], function(_, c) {
  var SiftSelector;
  SiftSelector = (function(_super) {
    __extends(SiftSelector, _super);

    function SiftSelector() {
      return SiftSelector.__super__.constructor.apply(this, arguments);
    }

    SiftSelector.prototype.template = 'varify/controls/sift';

    SiftSelector.prototype.ui = {
      select: '.sift-selector'
    };

    SiftSelector.prototype.events = {
      'change .sift-selector': 'change'
    };

    SiftSelector.prototype.initialize = function() {
      return this.on('ready', function() {
        return this.change();
      });
    };

    SiftSelector.prototype.getOperator = function() {
      if (this.ui.select.val() === 'damaging') {
        return 'lte';
      } else {
        return 'gt';
      }
    };

    SiftSelector.prototype.getValue = function() {
      return 0.5;
    };

    SiftSelector.prototype.setOperator = function(operator) {
      if (operator === 'lte') {
        return this.ui.select.val('damaging');
      } else {
        return this.ui.select.val('tolerated');
      }
    };

    return SiftSelector;

  })(c.ui.ControlItemView);
  return {
    SiftSelector: SiftSelector
  };
});
