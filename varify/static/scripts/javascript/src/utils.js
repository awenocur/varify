// Generated by CoffeeScript 1.7.1
define([], function() {
  var depthClass, effectImpactPriority, getRootUrl, parseISO8601UTC, priorityClass, qualityClass, toAbsolutePath;
  parseISO8601UTC = function(str) {
    var date, dateFields, dateTimeFields, day, hours, milliseconds, minutes, month, seconds, secondsFields, timeFields, year;
    if (str == null) {
      return;
    }
    dateTimeFields = str.split('T');
    if (dateTimeFields.length !== 2) {
      return;
    }
    dateFields = dateTimeFields[0].split('-');
    timeFields = dateTimeFields[1].split(':');
    if (dateFields.length !== 3 && timeFields.length !== 3) {
      return;
    }
    year = parseInt(dateFields[0]);
    month = parseInt(dateFields[1]);
    day = parseInt(dateFields[2]);
    hours = parseInt(timeFields[0]);
    minutes = parseInt(timeFields[1]);
    secondsFields = timeFields[2].split('.');
    if (secondsFields.length === 1) {
      seconds = parseInt(secondsFields[0]);
      milliseconds = 0;
    } else if (secondsFields.length === 2) {
      seconds = parseInt(secondsFields[0]);
      milliseconds = parseInt(secondsFields[1]);
    }
    if (year && month && day && hours && minutes && seconds) {
      date = new Date();
      date.setUTCFullYear(year);
      date.setUTCMonth(month - 1);
      date.setUTCDate(day);
      date.setUTCHours(hours);
      date.setUTCMinutes(minutes);
      date.setUTCSeconds(seconds, milliseconds);
      return date;
    }
  };
  getRootUrl = function() {
    return window.location.href.replace(new RegExp('/[^/]*/$'), '/');
  };
  toAbsolutePath = function(path) {
    return "" + (getRootUrl()) + path;
  };
  effectImpactPriority = function(impact) {
    switch (impact) {
      case 'High':
        return 1;
      case 'Moderate':
        return 2;
      case 'Low':
        return 3;
      case 'Modifier':
        return 4;
      default:
        return 5;
    }
  };
  priorityClass = function(priority) {
    switch (priority) {
      case 1:
        return 'text-error';
      case 2:
        return 'text-warning';
      default:
        return '';
    }
  };
  depthClass = function(depth) {
    if (depth < 10) {
      return 'text-warning';
    } else if (depth >= 30) {
      return 'text-success';
    } else {
      return '';
    }
  };
  qualityClass = function(qual) {
    if (qual < 30) {
      return 'text-warning';
    } else if (qual >= 50) {
      return 'text-success';
    } else {
      return '';
    }
  };
  return {
    parseISO8601UTC: parseISO8601UTC,
    getRootUrl: getRootUrl,
    toAbsolutePath: toAbsolutePath,
    effectImpactPriority: effectImpactPriority,
    priorityClass: priorityClass,
    depthClass: depthClass,
    qualityClass: qualityClass
  };
});
